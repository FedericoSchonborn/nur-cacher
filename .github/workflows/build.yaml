env:
  CACHIX_NAME: federicoschonborn
jobs:
  build:
    name: Build
    runs-on: ${{ inputs.runner }}
    steps:
      - name: Checkout
        run: |
          git clone --depth 1 https://codeberg.org/FedericoSchonborn/nur-packages $GITHUB_WORKSPACE
      - if: inputs.runner == 'ubuntu-22.04' && inputs.targetSystem != inputs.buildSystem
        name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      - name: Setup Nix
        uses: DeterminateSystems/nix-installer-action@v13
        with:
          extra-conf: |
            nix-path = nixpkgs=channel:${{ inputs.channel }}
            system = ${{ inputs.targetSystem }}
          nix-package-url: https://releases.lix.systems/lix/lix-2.90.0/lix-2.90.0-${{ inputs.buildSystem }}.tar.xz
          source-url: https://install.lix.systems/lix/lix-installer-${{ inputs.buildSystem }}
      - name: Setup Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v7
      - if: contains(fromJSON('["x86_64-linux", "aarch64-linux"]'), inputs.buildSystem)
        name: Setup Cachix
        uses: cachix/cachix-action@v15
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: ${{ env.CACHIX_NAME }}
      - name: Show Nixpkgs version
        run: |
          nix eval --impure --raw --expr "(import <nixpkgs> {}).lib.version"
      - name: Build Nix packages
        run: |
          nix run nixpkgs#nix-build-uncached -- ci.nix -A cacheOutputs -build-flags "--print-build-logs --keep-going"
name: Build
"on":
  workflow_call:
    inputs:
      buildSystem:
        required: true
        type: string
      channel:
        required: true
        type: string
      runner:
        required: true
        type: string
      targetSystem:
        required: true
        type: string
